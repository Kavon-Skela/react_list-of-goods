{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","console","log","ALPHABET","sort","currentGood","nextGood","localeCompare","LENGTH","length","reverse","App","state","NONE","sortByAlphabetis","setState","sortByLength","reverseGoods","resetAllSorts","this","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAMzB,OAFAI,QAAQC,IAAIJ,EAAUC,GAEdD,GACN,KAAKJ,EAASS,SACZH,EAAaI,MAAK,SAACC,EAAaC,GAC9B,OAAOD,EAAYE,cAAcD,MAEnC,MAEF,KAAKZ,EAASc,OACZR,EAAaI,MAAK,SAACC,EAAaC,GAC9B,OAAOD,EAAYI,OAASH,EAASG,UAY3C,OAJIV,GACFC,EAAaU,UAGRV,G,SA5CJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoDE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,iBAAmB,WACjB,EAAKC,SAAS,CAAEjB,SAAUJ,EAASS,YAPvC,EAUEa,aAAe,WACb,EAAKD,SAAS,CAAEjB,SAAUJ,EAASc,UAXvC,EAcES,aAAe,WACb,EAAKF,UAAS,SAACH,GACb,MAAO,CACLb,YAAaa,EAAMb,gBAjB3B,EAsBEmB,cAAgB,WACd,EAAKH,SAAS,CACZhB,YAAY,EACZD,SAAUJ,EAASmB,QAzBzB,4CA6BE,WACE,MAAiCM,KAAKP,MAA9Bb,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYxB,IAAaJ,EAASS,WAEtCoB,QAASJ,KAAKL,iBAPhB,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYxB,IAAaJ,EAASc,SAEtCe,QAASJ,KAAKH,aAPhB,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAavB,IAEjBwB,QAASJ,KAAKF,aAPhB,sBAYElB,GAAcD,IAAaJ,EAASmB,OAEpC,wBACEQ,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,cAHhB,sBAUJ,6BACGtB,EAAkBD,EAAiBwB,KAAKP,OACtCY,KAAI,SAAAC,GACH,OAAO,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAtF7C,GAAyBC,IAAMC,WCnE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.010a18e4.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((currentGood, nextGood) => {\n        return currentGood.localeCompare(nextGood);\n      });\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((currentGood, nextGood) => {\n        return currentGood.length - nextGood.length;\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabetis = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseGoods = () => {\n    this.setState((state) => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  resetAllSorts = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByAlphabetis}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetAllSorts}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state)\n            .map(good => {\n              return <li data-cy=\"Good\" key={good}>{good}</li>;\n            })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}